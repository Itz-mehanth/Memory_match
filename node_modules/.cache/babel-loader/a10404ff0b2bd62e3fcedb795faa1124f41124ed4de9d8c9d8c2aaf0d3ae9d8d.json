{"ast":null,"code":"var _jsxFileName = \"C:\\\\MemoryMatch\\\\memory_match\\\\src\\\\MemoryMatch.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./MemoryMatch.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst images = [\"üçé\", \"üçå\", \"üçí\", \"üçá\", \"üçâ\", \"ü•≠\", \"üçç\", \"üçë\", \"üçé\", \"üçå\", \"üçí\", \"üçá\", \"üçâ\", \"ü•≠\", \"üçç\", \"üçë\"];\nconst shuffleImages = () => {\n  return [...images].sort(() => Math.random() - 0.5);\n};\nexport default function MemoryMatch() {\n  _s();\n  const [shuffledImages, setShuffledImages] = useState(shuffleImages());\n  const [selected, setSelected] = useState([]);\n  const [matched, setMatched] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(10);\n  const [gameOver, setGameOver] = useState(false);\n  useEffect(() => {\n    if (timeLeft > 0) {\n      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n      return () => clearTimeout(timer);\n    } else {\n      setGameOver(true);\n    }\n  }, [timeLeft]);\n  const handleClick = index => {\n    if (gameOver) return;\n    if (selected.length < 2 && !selected.includes(index) && !matched.includes(index)) {\n      const newSelected = [...selected, index];\n      setSelected(newSelected);\n      if (newSelected.length === 2) {\n        setTurns(turns + 1);\n        const [first, second] = newSelected;\n        if (shuffledImages[first] === shuffledImages[second]) {\n          setMatched([...matched, first, second]);\n        }\n        setTimeout(() => {\n          setSelected([]);\n        }, 500);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Memory Match Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"info\",\n      children: [\"Time Left: \", timeLeft, \"s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"info\",\n      children: [\"Turns: \", turns]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: shuffledImages.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleClick(index),\n        className: `card ${selected.includes(index) || matched.includes(index) ? 'flip' : ''} ${matched.includes(index) ? 'matched' : ''}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-inner\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-front\",\n            children: image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-back\",\n            children: \"\\u2753\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Game Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You matched \", matched.length / 2, \" pairs in \", turns, \" turns.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(MemoryMatch, \"4fNeCURJ30g7KobTCTFZrrF+WNE=\");\n_c = MemoryMatch;\nvar _c;\n$RefreshReg$(_c, \"MemoryMatch\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","images","shuffleImages","sort","Math","random","MemoryMatch","_s","shuffledImages","setShuffledImages","selected","setSelected","matched","setMatched","turns","setTurns","timeLeft","setTimeLeft","gameOver","setGameOver","timer","setTimeout","clearTimeout","handleClick","index","length","includes","newSelected","first","second","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","image","onClick","window","location","reload","_c","$RefreshReg$"],"sources":["C:/MemoryMatch/memory_match/src/MemoryMatch.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./MemoryMatch.css\";\r\n\r\nconst images = [\r\n  \"üçé\", \"üçå\", \"üçí\", \"üçá\", \"üçâ\", \"ü•≠\", \"üçç\", \"üçë\",\r\n  \"üçé\", \"üçå\", \"üçí\", \"üçá\", \"üçâ\", \"ü•≠\", \"üçç\", \"üçë\"\r\n];\r\n\r\nconst shuffleImages = () => {\r\n  return [...images].sort(() => Math.random() - 0.5);\r\n};\r\n\r\nexport default function MemoryMatch() {\r\n  const [shuffledImages, setShuffledImages] = useState(shuffleImages());\r\n  const [selected, setSelected] = useState([]);\r\n  const [matched, setMatched] = useState([]);\r\n  const [turns, setTurns] = useState(0);\r\n  const [timeLeft, setTimeLeft] = useState(10);\r\n  const [gameOver, setGameOver] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (timeLeft > 0) {\r\n      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\r\n      return () => clearTimeout(timer);\r\n    } else {\r\n      setGameOver(true);\r\n    }\r\n  }, [timeLeft]);\r\n  \r\n  const handleClick = (index) => {\r\n    if (gameOver) return;\r\n    \r\n    if (selected.length < 2 && !selected.includes(index) && !matched.includes(index)) {\r\n      const newSelected = [...selected, index];\r\n      setSelected(newSelected);\r\n      \r\n      if (newSelected.length === 2) {\r\n        setTurns(turns + 1);\r\n        const [first, second] = newSelected;\r\n        if (shuffledImages[first] === shuffledImages[second]) {\r\n          setMatched([...matched, first, second]);\r\n        }\r\n        setTimeout(() => {\r\n          setSelected([]);\r\n        }, 500);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"game-container\">\r\n      <h1 className=\"title\">Memory Match Game</h1>\r\n      <p className=\"info\">Time Left: {timeLeft}s</p>\r\n      <p className=\"info\">Turns: {turns}</p>\r\n      <div className=\"grid-container\">\r\n        {shuffledImages.map((image, index) => (\r\n          <div\r\n            key={index}\r\n            onClick={() => handleClick(index)}\r\n            className={`card ${selected.includes(index) || matched.includes(index) ? 'flip' : ''} ${matched.includes(index) ? 'matched' : ''}`}\r\n          >\r\n            <div className=\"card-inner\">\r\n              <div className=\"card-front\">{image}</div>\r\n              <div className=\"card-back\">‚ùì</div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {gameOver && (\r\n        <div className=\"popup\">\r\n          <h2>Game Over!</h2>\r\n          <p>You matched {matched.length / 2} pairs in {turns} turns.</p>\r\n          <button onClick={() => window.location.reload()}>Restart</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}